/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}*,:after,:before{box-sizing:border-box}body{font:14px/19px Arial MT,Arial,sans-serif}h1,p{margin:0}a{color:#73b4d5}.container{max-width:720px;padding:0 20px;margin:0 auto}.profile{padding:20px 0 0;margin:0 0 24px}.about{margin:0 0 15px}.about__suggestion{box-shadow:0 0 0 1px rgba(60,44,0,.25);background-color:#fffbc8;border-radius:2px;padding:9px 0 8px 30px;margin:0 0 0 101px}.about img{float:left}.about__name{font-size:16px;line-height:20px;margin:0 0 4px}.about__post{margin:0 0 5px;display:inline-block}.chart table{position:relative;width:71%;float:right;border-collapse:collapse}.chart__caption{text-align:center;border-bottom:1px solid #ccc}.chart__caption td:first-child{width:70%}.chart__caption td:last-child{width:29%}.chart__progress{display:inline-block}.chart__line{white-space:nowrap;background-color:#3cb305;padding:3px 0 3px 5px;border-radius:2px;margin:0 0 2px}.chart__line_blue{background:#ace2f8}.chart__counter{display:inline-block;position:absolute;width:29%;right:0;text-align:center}.chart__counter div{padding:3px 0 3px 5px;margin:0 0 2px}.chart__footer td:last-child{text-align:center}.chart__footer td{font-size:17px;font-weight:700;padding:8px 0 0}.chart__second-row{padding:15px 0;border-top:1px solid #ccc;border-bottom:1px solid #ccc}.clearfix:after{content:"";display:table;clear:both}.comment-block{border:1px solid #000;margin:-1px 0 0;word-wrap:break-word}.questions-caption{font-size:16px;font-weight:700;margin:0 0 14px}.questions__comment{border:1px solid #cfcfcf;padding:13px 0 13px 20px;background:#f2fbff;margin:0 0 20px;position:relative;word-wrap:break-word}.questions__name{margin:0 0 7px}.questions__counter,.questions__reviews{display:inline-block}.questions__counter{float:right}.blocks{position:absolute;top:-21px;left:3px}.blocks:after,.blocks:before{content:"";position:absolute;left:20px;bottom:-20px;border:5px solid transparent;border-bottom:5px solid #cfcfcf;border-left:5px solid #cfcfcf}.blocks:after{bottom:-25px;border-bottom:5px solid #f2fbff;border-left:5px solid #f2fbff;left:22px}.form{background:#f2f2f2;padding:30px 0;text-align:center}.form__new-comment{width:100%;resize:none;margin:0 0 12px}.form__add-comment{padding:12px;max-width:285px;width:100%;border-radius:24px;border:none;background:#fdd639;font-weight:700;cursor:pointer}:active,:focus,:hover{outline:0;outline-offset:0}@media (max-width:478px){.chart table{width:100%}}@media (max-width:425px){.questions__counter{display:block;float:none}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
